import{d as n}from"./index-lQGp847G.js";const c="$aass_sandbox$";n.create({baseURL:"https://sandbox.asaas.com/api/v3",headers:{"Content-Type":"application/json",access_token:c}});const t=n.create({baseURL:""});console.log("Asaas API client usando URL relativa para requisições");const p=async e=>i(e),u=async(e,r,a)=>d(e,r,a),i=async e=>{try{console.log("Criando/recuperando cliente no Asaas (via backend):",e);const r="/api/asaas-create-customer";console.log("Usando endpoint:",r);const a=await t.post(r,{name:e.name,email:e.email,cpfCnpj:e.cpfCnpj,mobilePhone:e.mobilePhone,userId:localStorage.getItem("userId")});if(console.log("Resposta da API de criação de cliente:",a.data),a.data&&a.data.customer&&a.data.customer.asaasId)return a.data.customer.asaasId;if(a.data&&a.data.customerId)return a.data.customerId;throw new Error("ID de cliente não recebido")}catch(r){throw console.error("Erro ao criar cliente no Asaas:",r),r instanceof Error?new Error(`Falha ao criar cliente: ${r.message}`):new Error("Falha ao criar cliente no Asaas")}},d=async(e,r,a)=>{try{console.log(`Criando assinatura via backend: planId=${e}, userId=${r}, customerId=${a}`);const o="/api/asaas-create-subscription";console.log("Usando endpoint:",o);const s=await t.post(o,{planId:e,userId:r,customerId:a});if(console.log("Resposta da API de criação de assinatura:",s.data),s.data&&s.data.redirectUrl)return{subscriptionId:s.data.subscriptionId||"",redirectUrl:s.data.redirectUrl};throw new Error("URL de redirecionamento não recebida")}catch(o){throw console.error("Erro ao criar assinatura no Asaas:",o),o instanceof Error?new Error(`Falha ao criar assinatura: ${o.message}`):new Error("Falha ao criar assinatura no Asaas")}};export{u as a,p as c};
